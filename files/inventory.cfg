#textdomain wesnoth-Bobs_RPG_Era

#define BOB_INVENTORY_ITEM ID
[option]
message= "&{bob_{ID}_icon}=$inventory[$side_number].{ID}=<span color='{BOB_GREEN}'>" + {bob_{ID}_name} + "</span>
<span size='small'>" + {bob_{ID}_description} + "</span>"
[show_if]
	{BOB_CONDITION inventory[$side_number].{ID} greater_than_equal_to 1}
[/show_if]
[/option]
#enddef

#define BOB_INVENTORY_STRING ID HINT
"&{bob_{ID}_icon}=$inventory[$side_number].{ID}=<span color='{BOB_GREEN}'>" + {bob_{ID}_name} + "</span>
<span size='small'>" + {bob_{ID}_description} + "</span>
<span size='small' color='{BOB_GREY}'>" + {HINT} + "</span>"
#enddef

#define BOB_DRINK_POTION ID
{VARIABLE_OP inventory[$side_number].{ID} add -1}
{VARIABLE used_item {bob_{ID}_name_articled}}
{BOB_SOUND squishy-miss.wav}
{BOB_PRINT_G _"$character[$side_number].name has drunk $used_item|."
      _"female^$character[$side_number].name has drunk $used_item|."}
#enddef

#define BOB_INVENTORY
[switch]
	variable=inventory[$side_number].armour
	[case]
		value=cloak
		{VARIABLE temp_armour.name {bob_cloak_name}}
		{VARIABLE temp_armour.description {bob_cloak_description}}
	[/case]
	[case]
		value=leather_tunic
		{VARIABLE temp_armour.name {bob_leather_tunic_name}}
		{VARIABLE temp_armour.description {bob_leather_tunic_description}}
	[/case]
	[case]
		value=studded_jerkin
		{VARIABLE temp_armour.name {bob_studded_jerkin_name}}
		{VARIABLE temp_armour.description {bob_studded_jerkin_description}}
	[/case]
	[case]
		value=chainmail_shirt
		{VARIABLE temp_armour.name {bob_chainmail_shirt_name}}
		{VARIABLE temp_armour.description {bob_chainmail_shirt_description}}
	[/case]
	[case]
		value=plate_armour
		{VARIABLE temp_armour.name {bob_plate_armour_name}}
		{VARIABLE temp_armour.description {bob_plate_armour_description}}
	[/case]
[/switch]

{VARIABLE dialog.inventory yes}
[while]
{BOB_CONDITION dialog.inventory equals yes}
[do]
[message]
	speaker=narrator
	image=portraits/backpack.png
	caption=_ "caption^Inventory"
	message=" "

[option]
message= {MENU_IMG_TXT2 "icons/blank-icon.png" " " _"Return To Game"}
[command]
	{CLEAR_VARIABLE dialog}
[/command]
[/option]

####################################################################################
# Weapons in Use
####################################################################################

#####################
# Melee
#####################

[option]
message= "&$character[$side_number].melee_weapon_icon= =<span color='{BOB_GREEN}'>" + _"Current Melee Weapon: $character[$side_number].melee_weapon_name" + "</span>
<span size='small' color='{BOB_GREY}'>" + _"(Select to change weapon)" + "</span>"
[command]
	{BOB_EXAMINE_MELEE_WEAPON}
[/command]
[/option]

#####################
# Ranged
#####################

[option]
message= "&$character[$side_number].ranged_weapon_icon= =<span color='{BOB_GREEN}'>" + _"Current Ranged Weapon: $character[$side_number].ranged_weapon_name" + "</span>
<span size='small' color='{BOB_GREY}'>" + _"(Select to change weapon)" + "</span>"
# Hide this for magicians
[show_if]
	{BOB_CONDITION character[$side_number].ranged_weapon_skill not_equals light}
	{BOB_CONDITION character[$side_number].ranged_weapon_skill not_equals fire}
	{BOB_CONDITION character[$side_number].ranged_weapon_skill not_equals ice}
	{BOB_CONDITION character[$side_number].ranged_weapon_skill not_equals lightning}
	{BOB_CONDITION character[$side_number].ranged_weapon_skill not_equals sky_spirits}
	{BOB_CONDITION character[$side_number].ranged_weapon_skill not_equals forest_spirits}
[/show_if]
[command]
	{BOB_EXAMINE_RANGED_WEAPON}
[/command]
[/option]

#####################
# Armour
#####################
 
[option]
message= "&$inventory[$side_number].armour_icon= =<span color='{BOB_GREEN}'>$temp_armour.name|</span>
<span size='small' color='{BOB_GREY}'>" + _"(Select to examine)" + "</span>"
[command]

	{VARIABLE dialog.examining_armour yes}
	[while]
	{BOB_CONDITION dialog.examining_armour equals yes}
	[do]
	[message]
		speaker=narrator
		image=$inventory[$side_number].armour_icon
		caption=$temp_armour.name
		message=$temp_armour.description

	[option]
	message= {MENU_IMG_TXT2 "icons/blank-icon.png" " " _"Return To Game"}
	[command]
		{CLEAR_VARIABLE dialog}
	[/command]
	[/option]

	[option]
	message= "&icons/inventory.png= =<span color='{BOB_GREEN}'>" + _"Return To Inventory" + "</span>"
	[command]
		{CLEAR_VARIABLE finished_examining_armour}
	[/command]
	[/option]

	[/message]
	[/do]
	[/while]

[/command]
[/option]

####################################################################################
# Potions
####################################################################################

#####################
# Scenario Specific Potions
#####################

#{BOB_SCENARIO_SPECIFIC_POTION_1}
#{BOB_SCENARIO_SPECIFIC_POTION_2}
#{BOB_SCENARIO_SPECIFIC_POTION_3}

#####################
# Red (Hitpoints)
#####################

# Health Potion
[option]
message= {BOB_INVENTORY_STRING health_potion _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].health_potion greater_than_equal_to 1}
[/show_if]
[command]
	[if]
		[have_unit]
			x,y=$x1,$y1
			[not]
				[filter_wml]
					hitpoints=$this_unit.max_hitpoints
				[/filter_wml]
			[/not]
		[/have_unit]
		[then]
			{BOB_MODIFY_HITPOINTS 6 no 0}
			{BOB_DRINK_POTION health_potion}
			{BOB_REDRAW}
		[/then]
	[/if]
[/command]
[/option]

# Endurance Potion
[option]
message= {BOB_INVENTORY_STRING endurance_potion _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].endurance_potion greater_than_equal_to 1}
[/show_if]
[command]
	{BOB_MODIFY_HITPOINTS 10 no 1}
	{BOB_DRINK_POTION endurance_potion}
	{BOB_REDRAW}
[/command]
[/option]

# Stamina Potion
[option]
message= {BOB_INVENTORY_STRING stamina_potion _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].stamina_potion greater_than_equal_to 1}
[/show_if]
[command]
	{BOB_MODIFY_HITPOINTS 0 no 3}
	{BOB_DRINK_POTION stamina_potion}
	{BOB_REDRAW}
[/command]
[/option]

# Life Potion
[option]
message= {BOB_INVENTORY_STRING life_potion _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].life_potion greater_than_equal_to 1}
[/show_if]
[command]
	[if]
		[have_unit]
			x,y=$x1,$y1
			[not]
				[filter_wml]
					hitpoints=$this_unit.max_hitpoints
				[/filter_wml]
			[/not]
		[/have_unit]
		[then]
			{BOB_MODIFY_HITPOINTS 20 no 0}
			{BOB_DRINK_POTION life_potion}
			{BOB_REDRAW}
		[/then]
	[/if]
[/command]
[/option]

#####################
# Purple (XP-related)
#####################

# Brainhaste Tonic
[option]
message= {BOB_INVENTORY_STRING brainhaste_tonic _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].brainhaste_tonic greater_than_equal_to 1}
[/show_if]
[command]
	{BOB_DRINK_POTION brainhaste_tonic}
	{BOB_STORE (
		{VARIABLE_OP stored.experience add 4}
		[if]
			{BOB_CONDITION stored.experience greater_than_equal_to $stored.max_experience}
			[then]
				{VARIABLE_OP character[$side_number].character_points add 10}
				{VARIABLE stored.overlays misc/cp-overlay.png}
			[/then]
		[/if]
	)}
	{BOB_MODIFY_EXPERIENCE 0}
[/command]
[/option]

# Mind Juice
[option]
message= {BOB_INVENTORY_STRING mind_juice _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].mind_juice greater_than_equal_to 1}
[/show_if]
[command]
	{BOB_STORE (
		# Prevent potion making max xp too low
		[if]
			{BOB_CONDITION stored.max_experience greater_than_equal_to 13}
			[then]
				{BOB_DRINK_POTION mind_juice}
				{VARIABLE_OP stored.max_experience add -3}
				[if]
					{BOB_CONDITION stored.experience greater_than_equal_to $stored.max_experience}
					[then]
						{VARIABLE_OP character[$side_number].character_points add 10}
						{VARIABLE stored.overlays misc/cp-overlay.png}
					[/then]
				[/if]
			[/then]
		[/if]
	)}
	{BOB_MODIFY_EXPERIENCE 0}
[/command]
[/option]

#####################
# Green (poison-related)
#####################

# Antidote
[option]
message= {BOB_INVENTORY_STRING antidote _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].antidote greater_than_equal_to 1}
[/show_if]
[command]
	# Prevent curing when not poisoned
	[if]
		[have_unit]
			x,y=$x1,$y1
			[filter_wml]
				[status]
					poisoned=yes
				[/status]
			[/filter_wml]
		[/have_unit]
		[then]
			{BOB_ALTER_STATUS x=$x1 y=$y1 poisoned no}
			{BOB_DRINK_POTION antidote}
			{BOB_REDRAW}
		[/then]
	[/if]
[/command]
[/option]

# Speed Serum
[option]
message= {BOB_INVENTORY_STRING speed_serum _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].speed_serum greater_than_equal_to 1}
[/show_if]
[command]
	{BOB_STORE_UNIT side=$side_number canrecruit=yes ({VARIABLE stored_unit.moves $stored_unit.max_moves})}
	{BOB_ALTER_STATUS x=$x1 y=$y1 poisoned yes}
	{BOB_DRINK_POTION speed_serum}
	{BOB_REDRAW}
[/command]
[/option]

#####################
# Blue (speed/fighting related)
#####################

# Energy Cocktail
[option]
message= {BOB_INVENTORY_STRING energy_cocktail _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].energy_cocktail greater_than_equal_to 1}
[/show_if]
[command]
	# Prevent potion being drunk multiple times to stop special being added more than once
	[if]
		[have_unit]
			x,y=$x1,$y1
			[not]
			[filter_wml]
				[attack]
					[specials]
						[dummy]
							id=energised
						[/dummy]
					[/specials]
				[/attack]
			[/filter_wml]
			[/not]
		[/have_unit]
		[then]
			{BOB_ADD_WEAPON_SPECIAL melee $character[$side_number].melee_weapon ENERGISED}
			{BOB_ADD_WEAPON_SPECIAL ranged $character[$side_number].ranged_weapon ENERGISED}
			{BOB_DRINK_POTION energy_cocktail}
			{BOB_REDRAW}
		[/then]
	[/if]
[/command]
[/option]

# Bloodlust Bile
[option]
message= {BOB_INVENTORY_STRING bloodlust_bile _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].bloodlust_bile greater_than_equal_to 1}
[/show_if]
[command]
	# Prevent potion being drunk multiple times to stop special being added more than once
	[if]
		[have_unit]
			x,y=$x1,$y1
			[not]
			[filter_wml]
				[attack]
					[specials]
						[dummy]
							id=bloodlust
						[/dummy]
					[/specials]
				[/attack]
			[/filter_wml]
			[/not]
		[/have_unit]
		[then]
			{BOB_ADD_WEAPON_SPECIAL melee $character[$side_number].melee_weapon BLOODLUST}
			{BOB_ADD_WEAPON_SPECIAL ranged $character[$side_number].ranged_weapon BLOODLUST}
			{BOB_DRINK_POTION bloodlust_bile}
			{BOB_REDRAW}
		[/then]
	[/if]
[/command]
[/option]

# Frenzy Fluid
[option]
message= {BOB_INVENTORY_STRING frenzy_fluid _"(Select to drink)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].frenzy_fluid greater_than_equal_to 1}
[/show_if]
[command]
	# Prevent potion being drunk multiple times to stop special being added more than once
	[if]
		[have_unit]
			x,y=$x1,$y1
			[not]
			[filter_wml]
				[attack]
					[specials]
						[berserk]
							id=frenzy
						[/berserk]
					[/specials]
				[/attack]
			[/filter_wml]
			[/not]
		[/have_unit]
		[then]
			{BOB_ADD_WEAPON_SPECIAL melee $character[$side_number].melee_weapon FRENZY}
			{BOB_ADD_WEAPON_SPECIAL ranged $character[$side_number].ranged_weapon FRENZY}
			{BOB_DRINK_POTION frenzy_fluid}
			{BOB_REDRAW}
		[/then]
	[/if]
[/command]
[/option]

####################################################################################
# Misc Items
####################################################################################

#{BOB_SCENARIO_SPECIFIC_MISC_ITEM_1}
#{BOB_SCENARIO_SPECIFIC_MISC_ITEM_2}
#{BOB_SCENARIO_SPECIFIC_MISC_ITEM_3}

#####################
# Misc Boots
#####################

# Walking Boots
{BOB_INVENTORY_ITEM walking_boots}
# Elven Boots
{BOB_INVENTORY_ITEM elven_boots}
# Nim Boots
{BOB_INVENTORY_ITEM nim_boots}

#####################
# Snow Shoes
#####################

# Just for show (for characters who do not need it)
[option]
message= "&{bob_snow_shoes_icon}=$inventory[$side_number].snow_shoes=<span color='{BOB_GREEN}'>" + {bob_snow_shoes_name} + "</span>
<span size='small'>" + {bob_snow_shoes_description} + "</span>"
[show_if]
	{BOB_CONDITION inventory[$side_number].snow_shoes greater_than_equal_to 1}
	{BOB_CONDITION inventory[$side_number].snow_shoes_on not_equals yes}
	[and]
		{BOB_CONDITION character[$side_number].perk_snow_trekking equals yes}
		[or]
			{BOB_CONDITION unit.race equals dwarf}
		[/or]
	[/and]
[/show_if]
[/option]

# Unworn
[option]
message= {BOB_INVENTORY_STRING snow_shoes _"(Select to wear)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].snow_shoes greater_than_equal_to 1}
	{BOB_CONDITION inventory[$side_number].snow_shoes_on not_equals yes}
	{BOB_CONDITION character[$side_number].perk_snow_trekking not_equals yes}
	{BOB_CONDITION unit.race not_equals dwarf}
[/show_if]
[command]
	{BOB_MODIFY_MOVEMENT x=$x1 y=$y1 -1}
	{BOB_ALTER_MOVE_COSTS frozen -1}
	{VARIABLE_OP inventory[$side_number].snow_shoes add -1}
	{VARIABLE inventory[$side_number].snow_shoes_on yes}
	{BOB_PRINT_G _"$character[$side_number].name has put on some snow shoes"
	      _"female^$character[$side_number].name has put on some snow shoes"}
	{BOB_REDRAW}
[/command]
[/option]

# Worn
[option]
message= {BOB_INVENTORY_STRING snow_shoes _"(Select to remove)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].snow_shoes_on equals yes}
[/show_if]
[command]
	{BOB_MODIFY_MOVEMENT x=$x1 y=$y1 1}
	{BOB_ALTER_MOVE_COSTS frozen 1}
	{VARIABLE_OP inventory[$side_number].snow_shoes add 1}
	{CLEAR_VARIABLE inventory[$side_number].snow_shoes_on}
	{BOB_PRINT_G _"$character[$side_number].name has taken off their snow shoes"
	      _"female^$character[$side_number].name has taken off their snow shoes"}
	{BOB_REDRAW}
[/command]
[/option]

#####################
# Magic Bean
#####################

[option]
message= "&{bob_magic_bean_icon}=$inventory[$side_number].magic_bean=<span color='{BOB_GREEN}'>" + {bob_magic_bean_name} + "</span>
<span size='small'>" + {bob_magic_bean_description_alt} + "</span>
<span size='small' color='{BOB_GREY}'>" + _"(Select to plant)" + "</span>"
[show_if]
	{BOB_CONDITION inventory[$side_number].magic_bean greater_than_equal_to 1}
	[have_location]
		x,y=$x1,$y1
		terrain=Gg,Gs,Gd,Gll
	[/have_location]
[/show_if]
[command]
	{VARIABLE_OP inventory[$side_number].magic_bean add -1}
	{BOB_PRINT_G _"$character[$side_number].name has planted a magic bean"
	      _"female^$character[$side_number].name has planted a magic bean"}
	{BOB_SOUND wose-die.ogg}
	{MODIFY_TERRAIN Gg^Fet $x1 $y1}
	{BOB_REDRAW}
[/command]
[/option]

[option]
message= "&{bob_magic_bean_icon}=$inventory[$side_number].magic_bean=<span color='{BOB_GREEN}'>" + {bob_magic_bean_name} + "</span>
<span size='small'>" + {bob_magic_bean_description} + "</span>"
[show_if]
	{BOB_CONDITION inventory[$side_number].magic_bean greater_than_equal_to 1}
	[not]
		[have_location]
			x,y=$x1,$y1
			terrain=Gg,Gs,Ggf
		[/have_location]
	[/not]
[/show_if]
[/option]

#####################
# Tent
#####################

[option]
message= {BOB_INVENTORY_STRING tent _"(Select to pitch)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].tent greater_than_equal_to 1}
[/show_if]
[command]
	[if]
		[not]
			[have_location]
				x,y=$x1,$y1
				terrain="Xt,Xu,Xv,*^Xo,Xos,Qt,Qlf,Ql,Qxu,Md^Xm,Mm^Xm,Wo,Ww,_off^_usr,Dd^Vda,Dd^Vdt,Aa^Vea,Gg^Ve,Aa^Vha,Gg^Vh,Hh^Vhh,Ha^Vhha,Mm^Vhh,Gs^Vht,Uu^Vu,Uu^Vud,Ww^Vm,Ss^Vhs,Ss^Vm"
			[/have_location]
		[/not]
		[then]
			{VARIABLE_OP inventory[$side_number].tent add -1}
			{BOB_PRINT_G _"$character[$side_number].name has pitched a tent"
			      _"female^$character[$side_number].name has pitched a tent"}
			{BOB_SOUND ("staff.wav")}
			{BOB_DELAY 100}
			{BOB_SOUND ("pincers.ogg")}
			{BOB_DELAY 160}
			{BOB_SOUND ("sling.ogg")}
			{PLACE_IMAGE scenery/tent.png $x1 $y1}
			{BOB_REDRAW}
			[store_locations]
				variable=tent_xy
				find_in=tent_xy
				[or]
					x,y=$x1,$y1
				[/or]
			[/store_locations]
		[/then]
	[/if]
[/command]
[/option]

#####################
# Map
#####################

[option]
message= {BOB_INVENTORY_STRING map _"(Select to read)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].map greater_than_equal_to 1}
[/show_if]
[command]
	{VARIABLE_OP inventory[$side_number].map add -1}
	{BOB_PRINT_G _"$character[$side_number].name has studied a map of the local area"
	      _"female^$character[$side_number].name has studied a map of the local area"}
	[remove_shroud]
		side=$side_number
		[filter_adjacent_location]
			x=$x1
			y=$y1
			radius=9
			[filter_radius]
				terrain=!,Xu,Xv,Xt,*^Xo,Xos,Md^Xm,Mm^Xm,_off^_usr
			[/filter_radius]
		[/filter_adjacent_location]
	[/remove_shroud]
	{BOB_REDRAW}
[/command]
[/option]

#####################
# Suicide Bomb
#####################

[option]
message= {BOB_INVENTORY_STRING suicide_bomb _"(Select to detonate)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].suicide_bomb greater_than_equal_to 1}
[/show_if]
[command]

	{CLEAR_VARIABLE dialog}
	{VARIABLE_OP inventory[$side_number].suicide_bomb add -1}
	{BOB_PRINT_G _"$character[$side_number].name has detonated a suicide bomb"
	      _"female^$character[$side_number].name has detonated a suicide bomb"}
	{BOB_REDRAW}
	{BOB_SOUND explosion.ogg}
	[item]
		x,y=$x1,$y1
		halo="projectiles/fire-burst-small-1.png:75,projectiles/fire-burst-small-2.png:75,projectiles/fire-burst-small-3.png:75,projectiles/fire-burst-small-4.png:75,projectiles/fire-burst-small-5.png:75,projectiles/fire-burst-small-6.png:75,projectiles/fire-burst-small-7.png:75,projectiles/fire-burst-small-8.png:75" 
	[/item]
	{REMOVE_IMAGE $x1 $y1}
	{BOB_MODIFY_HITPOINTS -10 no 0}
	{BOB_FLOATING_LABEL side=$side_number x,y=$x1,$y1 "10" {COLOR_HARM}}
	
	[store_unit]
		[filter]
			[filter_adjacent]
				x,y=$x1,$y1
			[/filter_adjacent]
		[/filter]
		variable=suicide_adjacent
	[/store_unit]

	{FOREACH suicide_adjacent i}
		
		{VARIABLE temp_x $suicide_adjacent[$i].x}
		{VARIABLE temp_y $suicide_adjacent[$i].y}
		
		[unstore_unit]
			variable=suicide_adjacent[$i]
			text="10"
			{COLOR_HARM}
		[/unstore_unit]
		
		[object]
			silent=yes
			duration=forever
			[filter]
				x=$temp_x
				y=$temp_y
			[/filter]
			[effect]
				apply_to=hitpoints
				increase=-10
			[/effect]
		[/object]
		
	{NEXT i}

	{CLEAR_VARIABLE suicide_adjacent}
	{CLEAR_VARIABLE temp_x}
	{CLEAR_VARIABLE temp_y}
	
[/command]
[/option]

#####################
# Tongue of Mockery
#####################

[option]
message= {BOB_INVENTORY_STRING tongue_of_mockery _"(Select to unleash the mockery)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].tongue_of_mockery greater_than_equal_to 1}
[/show_if]
[command]

	{CLEAR_VARIABLE dialog}
	{VARIABLE_OP inventory[$side_number].tongue_of_mockery add -1}
	{BOB_PRINT_G _"$character[$side_number].name has unleashed the tongue of mockery"
	      _"female^$character[$side_number].name has unleashed the tongue of mockery"}
	{BOB_REDRAW}

	{BOB_SOUND dwarf-laugh.wav}
	[store_unit]
		[filter]
			[filter_adjacent]
				x,y=$x1,$y1
			[/filter_adjacent]
			[not]
				[filter_wml]
					[attack]
						[specials]
							[berserk]
								id=frenzy
							[/berserk]
						[/specials]
					[/attack]
				[/filter_wml]
			[/not]
		[/filter]
		variable=adjacent
	[/store_unit]

	{FOREACH adjacent i}
		
		{VARIABLE temp_x $adjacent[$i].x}
		{VARIABLE temp_y $adjacent[$i].y}
		
		[unstore_unit]
			variable=adjacent[$i]
			text= _ "Frenzy"
			{COLOR_HARM}
		[/unstore_unit]
		
		[object]
			silent=yes
			duration=forever
			[filter]
				x=$temp_x
				y=$temp_y
			[/filter]
			[effect]
			apply_to=attack
			range=melee
				[set_specials]
				mode=append
				{WEAPON_SPECIAL_FRENZY}
				[/set_specials]
			[/effect]
			[effect]
			apply_to=attack
			range=ranged
				[set_specials]
				mode=append
				{WEAPON_SPECIAL_FRENZY}
				[/set_specials]
			[/effect]
		[/object]
		
	{NEXT i}

	{CLEAR_VARIABLE adjacent}
	{CLEAR_VARIABLE temp_x}
	{CLEAR_VARIABLE temp_y}
	
[/command]
[/option]

#####################
# Lantern
#####################

# should be set to extinguished when hit by cold or water, or when unit moves in swamp or water.

# Unlit lantern
[option]
message= "&{bob_unlit_lantern_icon}=$inventory[$side_number].unlit_lantern=<span color='{BOB_GREEN}'>" + {bob_unlit_lantern_name_alt} + "</span>
<span size='small'>" + {bob_unlit_lantern_description} + "</span>
<span size='small' color='{BOB_GREY}'>" + _"(Select to light)" + "</span>"
[show_if]
	{BOB_CONDITION inventory[$side_number].unlit_lantern greater_than_equal_to 1}
	# this is to disable it
	{BOB_CONDITION character[$side_number].bob not_equals bob}
[/show_if]
[command]
	{VARIABLE_OP inventory[$side_number].unlit_lantern add -1}
	{VARIABLE_OP inventory[$side_number].lit_lantern add 1}
	{BOB_PRINT_G _"$character[$side_number].name has lit a lantern"
	      _"female^$character[$side_number].name has lit a lantern"}
	{BOB_ADD_ABILITY BRIGHTENS}
	{BOB_REDRAW}
[/command]
[/option]

# Lit lantern
[option]
message= {BOB_INVENTORY_STRING lit_lantern _"(Select to extinguish)"}
[show_if]
	{BOB_CONDITION inventory[$side_number].lit_lantern greater_than_equal_to 1}
	# this is to disable it
	{BOB_CONDITION character[$side_number].bob not_equals bob}
[/show_if]
[command]
	{VARIABLE_OP inventory[$side_number].lit_lantern add -1}
	{VARIABLE_OP inventory[$side_number].unlit_lantern add 1}
	# Since it is theoretically possible to have more than 1 lit lantern, this ensures that the ability is only removed when the last lit lantern is extinguished
	[if]
		{BOB_CONDITION inventory[$side_number].lit_lantern numerical_equals 0}
		[then]
			{BOB_REMOVE_ABILITY BRIGHTENS}
			{BOB_PRINT_G _"$character[$side_number].name has extinguished their lantern"
			      _"female^$character[$side_number].name has extinguished their lantern"}
		[/then]
	[/if]
	{BOB_REDRAW}
[/command]
[/option]

####################################################################################
# Raw Materials
####################################################################################

#{BOB_SCENARIO_SPECIFIC_RAW_INGREDIENT_1}
#{BOB_SCENARIO_SPECIFIC_RAW_INGREDIENT_2}
#{BOB_SCENARIO_SPECIFIC_RAW_INGREDIENT_3}

# Clay
{BOB_INVENTORY_ITEM clay}
# Slime
{BOB_INVENTORY_ITEM slime}
# Gold Nugget
{BOB_INVENTORY_ITEM gold_nugget}
# Ulox Rock
{BOB_INVENTORY_ITEM ulox_rock}
# Huanti Leaves
{BOB_INVENTORY_ITEM huanti_leaves}
# Yoll Tree Bark
{BOB_INVENTORY_ITEM yoll_tree_bark}
# Fang
{BOB_INVENTORY_ITEM fang}
# Fungi
{BOB_INVENTORY_ITEM fungi}
# Skull
{BOB_INVENTORY_ITEM skull}
# Lizard Tail
{BOB_INVENTORY_ITEM lizard_tail}
# Scorpion Tail
{BOB_INVENTORY_ITEM scorpion_tail}
# Dragon Tail
{BOB_INVENTORY_ITEM dragon_tail}

####################################################################################
# Rings
####################################################################################

# Ring of Swiftness
{BOB_INVENTORY_ITEM ring_of_swiftness}
# Fire Ring
{BOB_INVENTORY_ITEM fire_ring}
# Water Ring
{BOB_INVENTORY_ITEM water_ring}
# Sky Ring
{BOB_INVENTORY_ITEM sky_ring}
# Earth Ring
{BOB_INVENTORY_ITEM earth_ring}
# Gold Ring
{BOB_INVENTORY_ITEM gold_ring}

####################################################################################
# Traps
####################################################################################

# Bomb
{BOB_INVENTORY_ITEM bomb}
# Poison
{BOB_INVENTORY_ITEM poison}
# Net
{BOB_INVENTORY_ITEM net}

####################################################################################
# Unequipped Weapons
####################################################################################

#####################
# Basic Melee Weapons
#####################

# Sword
{BOB_INVENTORY_ITEM sword}
# Elven Sword
{BOB_INVENTORY_ITEM elven_sword}
# Sabre
{BOB_INVENTORY_ITEM saber}
# Spear
{BOB_INVENTORY_ITEM spear}
# Axe
{BOB_INVENTORY_ITEM axe} 
# Dagger
{BOB_INVENTORY_ITEM dagger}
# Mace
{BOB_INVENTORY_ITEM mace}
# Staff
{BOB_INVENTORY_ITEM staff}
# Staff
{BOB_INVENTORY_ITEM elven_staff}
# Quarterstaff
{BOB_INVENTORY_ITEM quarterstaff}
# Hammer
{BOB_INVENTORY_ITEM hammer}

#####################
# Basic Ranged Weapons
#####################

# Bow
{BOB_INVENTORY_ITEM bow}
# Elven Bow
{BOB_INVENTORY_ITEM elven_bow}
# Javelin
{BOB_INVENTORY_ITEM javelin}
# Bow
{BOB_INVENTORY_ITEM crossbow}
# Hatchet
{BOB_INVENTORY_ITEM hatchet}
# Knife
{BOB_INVENTORY_ITEM knife}
# Sling
{BOB_INVENTORY_ITEM sling}

#####################
# Novel Melee Weapons
#####################

# Holy Sword
{BOB_INVENTORY_ITEM holy_sword}
# Salamander Blade
{BOB_INVENTORY_ITEM salamander_blade}
# Slayer
{BOB_INVENTORY_ITEM slayer}

# Thunder Axe
{BOB_INVENTORY_ITEM thunder_axe}
# Battle Axe
{BOB_INVENTORY_ITEM battle_axe}

# Barbed Spear
{BOB_INVENTORY_ITEM barbed_spear}
# Enchanted Spear
{BOB_INVENTORY_ITEM enchanted_spear}
# Lance
{BOB_INVENTORY_ITEM lance}

# Ice Rod
{BOB_INVENTORY_ITEM ice_rod}
# Plague Staff
{BOB_INVENTORY_ITEM plague_staff}

# Nipper
{BOB_INVENTORY_ITEM nipper}

# Smasher
{BOB_INVENTORY_ITEM smasher}

#####################
# Novel Ranged Weapons
#####################

# Storm Bow
{BOB_INVENTORY_ITEM storm_bow}
# Frost Bow
{BOB_INVENTORY_ITEM frost_bow}
# Fire Bow
{BOB_INVENTORY_ITEM fire_bow}

# Tomahawk
{BOB_INVENTORY_ITEM tomahawk}
# Feathered Javelin
{BOB_INVENTORY_ITEM feathered_javelin}
# Heavy Crossbow
{BOB_INVENTORY_ITEM heavy_crossbow}
# Customised Sling
{BOB_INVENTORY_ITEM customised_sling}

#{BOB_SCENARIO_SPECIFIC_WEAPON_1}
#{BOB_SCENARIO_SPECIFIC_WEAPON_2}
#{BOB_SCENARIO_SPECIFIC_WEAPON_3}
#{BOB_SCENARIO_SPECIFIC_WEAPON_4}
#{BOB_SCENARIO_SPECIFIC_WEAPON_5}

[/message]
[/do]
[/while]
{CLEAR_VARIABLE used_item}
{CLEAR_VARIABLE temp_armour}
#enddef

####################################################################################
# Right-click option
####################################################################################

#define BOB_INVENTORY_OPTION
[set_menu_item]
	id=Inventory
	description=_ "menu^Inventory"
	image=misc/inventory.png
	[show_if]
		[have_unit]
			side=$side_number
			x,y=$x1,$y1
			canrecruit=yes
			[filter_wml]
				[variables]
					character_status=active
				[/variables]
				attacks_left=1
			[/filter_wml]
		[/have_unit]
	[/show_if]
	[command]
		{BOB_INVENTORY}
	[/command]
[/set_menu_item]
#enddef
