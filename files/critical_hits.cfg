#textdomain wesnoth-Bobs_RPG_Era

####################################################################################
# Critical Hit Abilities
####################################################################################

#define WEAPON_SPECIAL_MAIMED
[attacks]
	id=maimed
	name= _ "maimed"
	description= _ "Maimed:
This unit has been maimed and suffers -1 strikes with all weapons. The penalty is removed when the unit starts its turn with full health."
	sub=1
[/attacks]
#enddef

#define WEAPON_SPECIAL_BLINDED
[chance_to_hit]
	id=blinded
	name= _ "blinded"
	description= _ "Blinded:
This unit has been blinded and suffers -10% chance to hit with all weapons. The penalty is removed when the unit starts its turn with full health."
	sub=10
	cumulative=yes
[/chance_to_hit]
#enddef

#define ABILITY_CRIPPLED
[dummy]
	id=crippled
	name= _ "crippled"
	description= _ "Crippled:
This unit has been crippled and suffers -2 movement. The penalty is removed when the unit starts its turn with full health."
[/dummy]
#enddef

#define ABILITY_BRAINED
[dummy]
	id=brained
	name= _ "brained"
	description= _ "Brained:
This unit has suffered serious brain injury and will lose 1 point of experience every turn until it is restored to full health."
[/dummy]
#enddef

####################################################################################
# Critical Hit Events
####################################################################################

#define BOB_CRITICAL_HITS
[event]
	name="attacker hits"
	first_time_only=no
	{VARIABLE critical_hitter yes}
[/event]

[event]
	name="attack end"
	first_time_only=no
		
	# If the opponent is still alive
	[if]
		{BOB_CONDITION second_unit.hitpoints greater_than_equal_to 1}
		{BOB_CONDITION critical_hitter equals yes}
		[then]
			
			# Make a percentage roll for a critical hit
			{RANDOM 1..100}
			{VARIABLE percentage $random}
			
			# Add the target's modifier to the roll ('unlucky' characters have a negative modifier)
			{VARIABLE_OP percentage add $second_unit.variables.critical_modifier}
			
			# If the percentage roll is under the attacker's critical chance, score a hit
			[if]
				{BOB_CONDITION percentage less_than_equal_to $unit.variables.critical_chance}
				[then]
				
					# Check which type of critical hit is dealt
					{RANDOM Maimed,Blinded,Crippled,Brained}
					[switch]
						variable=random
						
						# Maimed
						[case]
						value=Maimed
							[if]
								{BOB_CONDITION second_unit.variables.maimed not_equals yes}
								[then]
									{BOB_STORE_UNIT x=$x2 y=$y2 ({VARIABLE stored_unit.variables.maimed yes})}
									[floating_text]
										x,y=$x2,$y2
										text="<span color='red'>" + _ "float^Maimed" + "</span>"
									[/floating_text]
									[object]
										silent=yes
										duration=forever
										[filter]
											x=$x2
											y=$y2
										[/filter]
										[effect]
											apply_to=attack
											range=melee
											[set_specials]
												mode=append
												{WEAPON_SPECIAL_MAIMED}
											[/set_specials]
										[/effect]
										[effect]
											apply_to=attack
											range=ranged
											[set_specials]
												mode=append
												{WEAPON_SPECIAL_MAIMED}
											[/set_specials]
										[/effect]
									[/object]
								[/then]
							[/if]
						[/case]
						
						# Blinded
						[case]
						value=Blinded
							[if]
								{BOB_CONDITION second_unit.variables.blinded not_equals yes}
								[then]
									{BOB_STORE_UNIT x=$x2 y=$y2 ({VARIABLE stored_unit.variables.blinded yes})}
									[floating_text]
										x,y=$x2,$y2
										text="<span color='red'>" + _ "float^Blinded" + "</span>"
									[/floating_text]
									[object]
										silent=yes
										duration=forever
										[filter]
											x=$x2
											y=$y2
										[/filter]
										[effect]
											apply_to=attack
											range=melee
											[set_specials]
												mode=append
												{WEAPON_SPECIAL_BLINDED}
											[/set_specials]
										[/effect]
										[effect]
											apply_to=attack
											range=ranged
											[set_specials]
												mode=append
												{WEAPON_SPECIAL_BLINDED}
											[/set_specials]
										[/effect]
									[/object]
								[/then]
							[/if]
						[/case]
						
						# Crippled
						[case]
						value=Crippled
							[if]
								{BOB_CONDITION second_unit.variables.crippled not_equals yes}
								[then]
									{BOB_STORE_UNIT x=$x2 y=$y2 ({VARIABLE stored_unit.variables.crippled yes})}
									[floating_text]
										x,y=$x2,$y2
										text="<span color='red'>" + _ "float^Crippled" + "</span>"
									[/floating_text]
									[object]
										silent=yes
										duration=forever
										[filter]
											x=$x2
											y=$y2
										[/filter]
										[effect]
											apply_to=movement
											increase=-2
										[/effect]
										[effect]
											apply_to=new_ability
											[abilities]
												{ABILITY_CRIPPLED}
											[/abilities]
										[/effect]
									[/object]
								[/then]
							[/if]
						[/case]
						
						# Brained
						[case]
						value=Brained
							[if]
								{BOB_CONDITION second_unit.variables.brained not_equals yes}
								[then]
									{BOB_STORE_UNIT x=$x2 y=$y2 ({VARIABLE stored_unit.variables.brained yes})}
									[floating_text]
										x,y=$x2,$y2
										text="<span color='red'>" + _ "float^Brained" + "</span>"
									[/floating_text]
									[object]
										silent=yes
										duration=forever
										[filter]
											x=$x2
											y=$y2
										[/filter]
										[effect]
											apply_to=new_ability
											[abilities]
												{ABILITY_BRAINED}
											[/abilities]
										[/effect]
									[/object]
								[/then]
							[/if]
						[/case]
						
					[/switch]
					
				[/then]
			[/if]
			
			{CLEAR_VARIABLE random}
		[/then]
	[/if]
	{CLEAR_VARIABLE critical_hitter}
	{CLEAR_VARIABLE percentage}
[/event]

# Removing the critical hits

[event]
	name="turn refresh"
	first_time_only=no

	# Maimed
	[store_unit]
		[filter]
			side=$side_number
			[filter_wml]
				hitpoints=$this_unit.max_hitpoints
				[variables]
					maimed=yes
				[/variables]
			[/filter_wml]
		[/filter]
		variable=units
	[/store_unit]
	
	{FOREACH units i}
	
		{VARIABLE units[$i].variables.maimed no}
		{VARIABLE maimed_x $units[$i].x}
		{VARIABLE maimed_y $units[$i].y}
		[unstore_unit]
			variable=units[$i]
			text= _"float^Healed"
			{COLOR_HEAL}
		[/unstore_unit]
		[object]
			silent=yes
			duration=forever
			[filter]
				side=$side_number
				x=$maimed_x
				y=$maimed_y
			[/filter]
			[effect]
				apply_to=attack
				range=melee
				remove_specials=maimed
			[/effect]
			[effect]
				apply_to=attack
				range=ranged
				remove_specials=maimed
			[/effect]
		[/object]

	{NEXT i}
	{CLEAR_VARIABLE units}
	{CLEAR_VARIABLE maimed_x}
	{CLEAR_VARIABLE maimed_y}

	# Blinded
	[store_unit]
		[filter]
			side=$side_number
			[filter_wml]
				hitpoints=$this_unit.max_hitpoints
				[variables]
					blinded=yes
				[/variables]
			[/filter_wml]
		[/filter]
		variable=units
	[/store_unit]
	
	{FOREACH units i}
	
		{VARIABLE units[$i].variables.blinded no}
		{VARIABLE blinded_x $units[$i].x}
		{VARIABLE blinded_y $units[$i].y}
		[unstore_unit]
			variable=units[$i]
			text= _"float^Healed"
			{COLOR_HEAL}
		[/unstore_unit]
		[object]
			silent=yes
			duration=forever
			[filter]
				side=$side_number
				x=$blinded_x
				y=$blinded_y
			[/filter]
			[effect]
				apply_to=attack
				range=melee
				remove_specials=blinded
			[/effect]
			[effect]
				apply_to=attack
				range=ranged
				remove_specials=blinded
			[/effect]
		[/object]

	{NEXT i}
	{CLEAR_VARIABLE units}
	{CLEAR_VARIABLE blinded_x}
	{CLEAR_VARIABLE blinded_y}

	# Crippled
	[store_unit]
		[filter]
			side=$side_number
			[filter_wml]
				hitpoints=$this_unit.max_hitpoints
				[variables]
					crippled=yes
				[/variables]
			[/filter_wml]
		[/filter]
		variable=units
	[/store_unit]
	
	{FOREACH units i}
	
		{VARIABLE units[$i].variables.crippled no}
		{VARIABLE_OP units[$i].moves add 2}
		{VARIABLE crippled_x $units[$i].x}
		{VARIABLE crippled_y $units[$i].y}
		[unstore_unit]
			variable=units[$i]
			text= _"float^Healed"
			{COLOR_HEAL}
		[/unstore_unit]
		[object]
			silent=yes
			duration=forever
			[filter]
				side=$side_number
				x=$crippled_x
				y=$crippled_y
			[/filter]
			[effect]
				apply_to=remove_ability
				[abilities]
					{ABILITY_CRIPPLED}
				[/abilities]
			[/effect]
			[effect]
				apply_to=movement
				increase=2
			[/effect]
		[/object]

	{NEXT i}
	{CLEAR_VARIABLE units}
	{CLEAR_VARIABLE crippled_x}
	{CLEAR_VARIABLE crippled_y}

	# Brained
	[store_unit]
		[filter]
			side=$side_number
			[filter_wml]
				hitpoints=$this_unit.max_hitpoints
				[variables]
					brained=yes
				[/variables]
			[/filter_wml]
		[/filter]
		variable=units
	[/store_unit]
	
	{FOREACH units i}
	
		{VARIABLE units[$i].variables.brained no}
		{VARIABLE brained_x $units[$i].x}
		{VARIABLE brained_y $units[$i].y}
		[unstore_unit]
			variable=units[$i]
			text= _"float^Healed"
			{COLOR_HEAL}
		[/unstore_unit]
		[object]
			silent=yes
			duration=forever
			[filter]
				side=$side_number
				x=$brained_x
				y=$brained_y
			[/filter]
			[effect]
				apply_to=remove_ability
				[abilities]
					{ABILITY_BRAINED}
				[/abilities]
			[/effect]
		[/object]

	{NEXT i}
	{CLEAR_VARIABLE units}
	{CLEAR_VARIABLE brained_x}
	{CLEAR_VARIABLE brained_y}

	# Brained units lose 1xp

	[store_unit]
		[filter]
			side=$side_number
			ability=brained
			[filter_wml]
				[not]
					experience=0
				[/not]
			[/filter_wml]
		[/filter]
		variable=units
	[/store_unit]

	{FOREACH units i}
		{VARIABLE_OP units[$i].experience add -1}
		[unstore_unit]
			variable=units[$i]
			text= _"float^-1xp"
			{COLOR_WHITE}
		[/unstore_unit]
	{NEXT i}
	{CLEAR_VARIABLE units}	
[/event]

# Ensuring all units have a critical hit chance

[event]
	name="new turn"
	first_time_only=no
	[store_unit]
		[filter]
			[filter_wml]
				[variables]
					[not]
						criticals_enabled=yes
					[/not]
				[/variables]
			[/filter_wml]
		[/filter]
		variable=units
	[/store_unit]

	{FOREACH units i}
		
		# The formula for assigning critical hit chance: (unit level + 1)*5
		# lvl0 - 5
		# lvl1 - 10
		# lvl2 - 15
		# lvl3 - 20
		# lvl4 - 25
		# lvl5 - 30
		{VARIABLE temp_factor $units[$i].level}
		{VARIABLE_OP temp_factor add 1}
		{VARIABLE_OP temp_factor multiply 5}
		{VARIABLE units[$i].variables.critical_chance $temp_factor}
		{VARIABLE units[$i].variables.critical_modifier 0}
		{VARIABLE units[$i].variables.criticals_enabled yes}
	
		[unstore_unit]
			variable=units[$i]
		[/unstore_unit]
			
	{NEXT i}
	
	{CLEAR_VARIABLE temp_factor}
	{CLEAR_VARIABLE units}
[/event]

# When a non-character unit levels up, its critical chance improves by 5%

[event]
	name="post advance"
	first_time_only=no
	[filter]
		[not]
			[filter_wml]
				[variables]
					character_status=active
				[/variables]
			[/filter_wml]
		[/not]
	[/filter]
	#{BOB_STORE ({VARIABLE_OP stored_unit.variables.critical_chance add 5})}
	[store_unit]
		[filter]
			x=$x1
			y=$y1
		[/filter]
		variable=stored_unit
	[/store_unit]
	{VARIABLE_OP stored_unit.variables.critical_chance add 5}
	[unstore_unit]
		advance=no
		variable=stored_unit
	[/unstore_unit]
	{CLEAR_VARIABLE stored_unit}
[/event]

#enddef
