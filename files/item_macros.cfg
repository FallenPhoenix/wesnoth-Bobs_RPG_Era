#textdomain wesnoth-Bobs_RPG_Era

####################################################################################
# Placing ingredients
####################################################################################

#####################
# Manually
#####################
   
# {BOB_PLACE_MATERIAL VARIABLE X Y}
# This macro manually places a raw material on the map.
# Possible variables: fang, ulox_rock, huanti_leaves, gold_nugget, slime, clay, scorpion_tail, dragon_tail, lizard_tail, yoll_tree_bark, skull
# Example: {BOB_PLACE_MATERIAL ulox_rock "11,12" "3,46"}
# Explanation: This places a Ulox Rock at 11,3 and 12,46
# Note: This macro can be used to place as many items as you want, just add more co-ordinates

#define BOB_PLACE_MATERIAL VARIABLE X Y
[store_locations]
	x={X}
	y={Y}
	variable={VARIABLE}_xy
	[or]
		find_in={VARIABLE}_xy
	[/or]
[/store_locations]
{FOREACH {VARIABLE}_xy i}
	{PLACE_IMAGE items/{VARIABLE}.png ${VARIABLE}_xy[$i].x ${VARIABLE}_xy[$i].y}
{NEXT i}
#enddef

#####################
# Auto-scatter
#####################

# This macro scatters a given item on a specified terrain

#define BOB_SCATTER_ITEMS ITEM NUMBER TERRAIN
	[store_locations]
        terrain={TERRAIN}
        variable=random_placement_locations
    [/store_locations]

    {VARIABLE REPEAT_i 0}

    [while]
        [variable]
            name=REPEAT_i
            less_than={NUMBER}
        [/variable]
        [variable]
            name=random_placement_locations.length
            greater_than=0
        [/variable]

        [do]
            [set_variable]
                name=random_subscript
                rand="0..$($random_placement_locations.length - 1)"
            [/set_variable]
			
            [item]
                image=items/{ITEM}.png
                x,y=$random_placement_locations[$random_subscript].x,$random_placement_locations[$random_subscript].y
            [/item]
			[store_locations]
				x=$random_placement_locations[$random_subscript].x
				y=$random_placement_locations[$random_subscript].y
				variable={ITEM}_xy
				[or]
					find_in={ITEM}_xy
				[/or]
			[/store_locations]
					
            {CLEAR_VARIABLE random_placement_locations[$random_subscript]}
            {VARIABLE_OP REPEAT_i add 1}
        [/do]
    [/while]

    {CLEAR_VARIABLE REPEAT_i}
    {CLEAR_VARIABLE random_subscript}
    {CLEAR_VARIABLE random_placement_locations}
#enddef

####################################################################################
# Placing other items
####################################################################################

#####################
# Special items
#####################

# {BOB_PLACE_SPECIAL_ITEM VARIABLE IMAGE X Y MESSAGE}
# This macro places an item on the map, which is added to the player's inventory when they step on the given co-ordinates. It also displays a message.
# Use: For weapons or special items
# Example: {BOB_PLACE_SPECIAL_ITEM ice_rod items/staff-magic.png 23 12 (has found the famed Ice Rod of Asktoi)}

#define BOB_PLACE_SPECIAL_ITEM VARIABLE IMAGE X Y MESSAGE
{PLACE_IMAGE {IMAGE} {X} {Y}}
[event]
name=moveto
	[filter]
		x={X}
		y={Y}
		[filter_wml]
			[variables]
				character_status=active
			[/variables]
		[/filter_wml]
		canrecruit=yes
	[/filter]
	{VARIABLE_OP inventory[$side_number].{VARIABLE} add 1}
	{BOB_SOUND skeleton-hit-2.ogg}
	{BOB_PRINT _"$character[$side_number].name has found an item"}
	[remove_item]
		x={X}
		y={Y}
		image={IMAGE}
	[/remove_item]
[/event]
#enddef

#####################
# Instant item
#####################

# {BOB_PLACE_INSTANT_ITEM VARIABLE IMAGE X Y MESSAGE ACTION}
# This macro places an item on the map, adds it to the player's inventory and displays a message. It also allows an ACTION - which can be anything you want.
# Use: For unique or special items that have an immediate effect
# Example: {BOB_PLACE_INSTANT_ITEM sky_ring items/ring-white.png 23 12 (has found a Sky Ring) ({BOB_MODIFY_RESISTANCE x=$x1 y=$y1 arcane -20})}
# Explanation: This places a Sky Ring on 23,12, adds it to the player's inventory AND immediately improves resistances by +20%.
# Note: The ACTION must be wrapped in brackets, (like this).

#define BOB_PLACE_INSTANT_ITEM VARIABLE IMAGE X Y MESSAGE ACTION
{PLACE_IMAGE {IMAGE} {X} {Y}}
[event]
name=moveto
[filter]
	x={X}
	y={Y}
	[filter_wml]
		[variables]
			character_status=active
		[/variables]
	[/filter_wml]
	canrecruit=yes
	[/filter]
	{VARIABLE_OP inventory[$side_number].{VARIABLE} add 1}
	{BOB_SOUND skeleton-hit-2.ogg}
	{BOB_PRINT _"$character[$side_number].name has found an item"}
	{ACTION}
	[remove_item]
		x={X}
		y={Y}
		image={IMAGE}
	[/remove_item]
[/event]
#enddef

####################################################################################
# Picking stuff up
####################################################################################

#####################
# Picking
#####################

#define BOB_PICK_UP VAR
[event]
name=moveto
first_time_only=no
	[filter]
		side=$side_number
		canrecruit=yes
		[filter_location]
			find_in={VAR}_xy
		[/filter_location]
		[filter_wml]
			[variables]
				character_status=active
			[/variables]
		[/filter_wml]
	[/filter]
	{VARIABLE_OP inventory[$side_number].{VAR} add 1}
	{BOB_SOUND skeleton-hit-2.ogg}
	[remove_item]
		x,y=$x1,$y1
	[/remove_item]
	[store_locations]
		variable={VAR}_xy
		find_in={VAR}_xy
		[not]
			x,y=$x1,$y1
		[/not]
	[/store_locations]
	{BOB_PRINT _"$character[$side_number].name has found an item"}
[/event] 
#enddef

#####################
# Picking up a dead character's inventory
#####################

#define BOB_PICK_UP_DEAD_CHARACTER_STUFF
[event]
	name=moveto
	first_time_only=no
	[filter]
		canrecruit=yes
		[filter_wml]
			[variables]
				character_status=active
			[/variables]
		[/filter_wml]
		# stored units contain x and y keys, so find_in= can operate on
		# arrays of stored units as well as arrays of stored locations
		[filter_location]
			find_in=dead_characters
		[/filter_location]
	[/filter]

	{FOREACH dead_characters i}
		[if]
			{BOB_CONDITION dead_characters[$i].x equals $x1}
			{BOB_CONDITION dead_characters[$i].y equals $y1}
			[then]
				# do what you do here, the dead character being stepped on is
				# stored in dead_characters[$i]
{BOB_PRINT ("$character[$side_number].name has picked up $character[$dead_characters[$i].side].name|'s inventory")}
{BOB_SOUND skeleton-hit-2.ogg}
[remove_item]
	x=$x1
	y=$y1
	image=items/bones_and_backpack.png
[/remove_item]
{PLACE_IMAGE items/bones.png $x1 $y1}
# Inventory: Gold
[store_side]
	side=$dead_characters[$i].side
	variable=dead
[/store_side]
[if]
	{BOB_CONDITION dead.gold greater_than 0}
	[then]
		{BOB_GOLD $side_number $dead.gold}
		{BOB_GOLD $dead_characters[$i].side -$dead.gold}
	[/then]
[/if]
# Inventory: Potions (Red)
{VARIABLE_OP inventory[$side_number].endurance_potion add $inventory[$dead_characters[$i].side].endurance_potion}
{VARIABLE_OP inventory[$side_number].stamina_potion add $inventory[$dead_characters[$i].side].stamina_potion}
{VARIABLE_OP inventory[$side_number].health_potion add $inventory[$dead_characters[$i].side].health_potion}
{VARIABLE_OP inventory[$side_number].life_potion add $inventory[$dead_characters[$i].side].life_potion}
# Inventory: Potions (Purple)
{VARIABLE_OP inventory[$side_number].mind_juice add $inventory[$dead_characters[$i].side].mind_juice}
{VARIABLE_OP inventory[$side_number].brainhaste_tonic add $inventory[$dead_characters[$i].side].brainhaste_tonic}
# Inventory: Potions (Green)
{VARIABLE_OP inventory[$side_number].antidote_potion add $inventory[$dead_characters[$i].side].antidote_potion}
{VARIABLE_OP inventory[$side_number].speed_serum add $inventory[$dead_characters[$i].side].speed_serum}
# Inventory: Potions (Blue)
{VARIABLE_OP inventory[$side_number].energy_cocktail add $inventory[$dead_characters[$i].side].energy_cocktail}
{VARIABLE_OP inventory[$side_number].bloodlust_bile add $inventory[$dead_characters[$i].side].bloodlust_bile}
{VARIABLE_OP inventory[$side_number].frenzy_fluid add $inventory[$dead_characters[$i].side].frenzy_fluid}
# Inventory: Misc Items

{VARIABLE_OP inventory[$side_number].magic_bean add $inventory[$dead_characters[$i].side].magic_bean}
{VARIABLE_OP inventory[$side_number].tent add $inventory[$dead_characters[$i].side].tent}
{VARIABLE_OP inventory[$side_number].map add $inventory[$dead_characters[$i].side].map}
{VARIABLE_OP inventory[$side_number].suicide_bomb add $inventory[$dead_characters[$i].side].suicide_bomb}
{VARIABLE_OP inventory[$side_number].tongue_of_mockery add $inventory[$dead_characters[$i].side].tongue_of_mockery}
{VARIABLE_OP inventory[$side_number].unlit_lantern add $inventory[$dead_characters[$i].side].unlit_lantern}
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].walking_boots greater_than_equal_to 1}
	[then]
		{BOB_MODIFY_MOVEMENT x=$x1 y=$y1 1}
		{VARIABLE_OP inventory[$side_number].walking_boots add $inventory[$dead_characters[$i].side].walking_boots}
	[/then]
[/if]
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].elven_boots greater_than_equal_to 1}
	[then]
		{BOB_MODIFY_MOVEMENT x=$x1 y=$y1 2}
		{VARIABLE_OP inventory[$side_number].elven_boots add $inventory[$dead_characters[$i].side].elven_boots}
	[/then]
[/if]
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].nim_boots greater_than_equal_to 1}
	[then]
		{BOB_MODIFY_SINGLE_DEFENCE x,y=$x1,$y1 flat -10}
		{VARIABLE_OP inventory[$side_number].nim_boots add $inventory[$dead_characters[$i].side].nim_boots}
	[/then]
[/if]
{VARIABLE_OP inventory[$side_number].snow_shoes add $inventory[$dead_characters[$i].side].snow_shoes}
# Inventory: Rings
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].fire_ring greater_than_equal_to 1}
	[then]
	{BOB_MODIFY_RESISTANCE x=$x1 y=$y1 fire -20}
	{VARIABLE_OP inventory[$side_number].fire_ring add $inventory[$dead_characters[$i].side].fire_ring}
	[/then]
[/if]
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].water_ring greater_than_equal_to 1}
	[then]
	{BOB_MODIFY_RESISTANCE x=$x1 y=$y1 cold -20}
	{VARIABLE_OP inventory[$side_number].water_ring add $inventory[$dead_characters[$i].side].water_ring}
	[/then]
[/if]
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].sky_ring greater_than_equal_to 1}
	[then]
	{BOB_MODIFY_RESISTANCE x=$x1 y=$y1 arcane -20}
	{VARIABLE_OP inventory[$side_number].sky_ring add $inventory[$dead_characters[$i].side].sky_ring}
	[/then]
[/if]
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].earth_ring greater_than_equal_to 1}
	[then]
	{BOB_MODIFY_RESISTANCE x=$x1 y=$y1 impact -20}
	{VARIABLE_OP inventory[$side_number].earth_ring add $inventory[$dead_characters[$i].side].earth_ring}
	[/then]
[/if]
[if]
	{BOB_CONDITION inventory[$dead_characters[$i].side].ring_of_swiftness greater_than_equal_to 1}
	[then]
	{BOB_MODIFY_MOVEMENT x=$x1 y=$y1 1}
	{VARIABLE_OP inventory[$side_number].ring_of_swiftness add $inventory[$dead_characters[$i].side].ring_of_swiftness}
	[/then]
[/if]
{VARIABLE_OP inventory[$side_number].gold_ring add $inventory[$dead_characters[$i].side].gold_ring}
# Inventory: Raw Materials
{VARIABLE_OP inventory[$side_number].clay add $inventory[$dead_characters[$i].side].clay}
{VARIABLE_OP inventory[$side_number].ulox_rock add $inventory[$dead_characters[$i].side].ulox_rock}
{VARIABLE_OP inventory[$side_number].gold_nugget add $inventory[$dead_characters[$i].side].gold_nugget}
{VARIABLE_OP inventory[$side_number].slime add $inventory[$dead_characters[$i].side].slime}
{VARIABLE_OP inventory[$side_number].scorpion_tail add $inventory[$dead_characters[$i].side].scorpion_tail}
{VARIABLE_OP inventory[$side_number].yoll_tree_bark add $inventory[$dead_characters[$i].side].yoll_tree_bark}
{VARIABLE_OP inventory[$side_number].huanti_leaves add $inventory[$dead_characters[$i].side].huanti_leaves}
{VARIABLE_OP inventory[$side_number].dragon_tail add $inventory[$dead_characters[$i].side].dragon_tail}
{VARIABLE_OP inventory[$side_number].fang add $inventory[$dead_characters[$i].side].fang}
{VARIABLE_OP inventory[$side_number].skull add $inventory[$dead_characters[$i].side].skull}
{VARIABLE_OP inventory[$side_number].lizard_tail add $inventory[$dead_characters[$i].side].lizard_tail}
# Inventory: Traps
{VARIABLE_OP inventory[$side_number].bomb add $inventory[$dead_characters[$i].side].bomb}
{VARIABLE_OP inventory[$side_number].net add $inventory[$dead_characters[$i].side].net}
{VARIABLE_OP inventory[$side_number].poison add $inventory[$dead_characters[$i].side].poison}
# Inventory: Melee Weapons
{VARIABLE_OP inventory[$side_number].sword add $inventory[$dead_characters[$i].side].sword}
{VARIABLE_OP inventory[$side_number].elven_sword add $inventory[$dead_characters[$i].side].elven_sword}
{VARIABLE_OP inventory[$side_number].saber add $inventory[$dead_characters[$i].side].saber}
{VARIABLE_OP inventory[$side_number].spear add $inventory[$dead_characters[$i].side].spear}
{VARIABLE_OP inventory[$side_number].axe add $inventory[$dead_characters[$i].side].axe}
{VARIABLE_OP inventory[$side_number].hammer add $inventory[$dead_characters[$i].side].hammer}
{VARIABLE_OP inventory[$side_number].dagger add $inventory[$dead_characters[$i].side].dagger}
{VARIABLE_OP inventory[$side_number].mace add $inventory[$dead_characters[$i].side].mace}
{VARIABLE_OP inventory[$side_number].staff add $inventory[$dead_characters[$i].side].staff}
{VARIABLE_OP inventory[$side_number].elven_staff add $inventory[$dead_characters[$i].side].elven_staff}
{VARIABLE_OP inventory[$side_number].quarterstaff add $inventory[$dead_characters[$i].side].quarterstaff}
# Inventory: Ranged Weapons
{VARIABLE_OP inventory[$side_number].bow add $inventory[$dead_characters[$i].side].bow}
{VARIABLE_OP inventory[$side_number].elven_bow add $inventory[$dead_characters[$i].side].elven_bow}
{VARIABLE_OP inventory[$side_number].javelin add $inventory[$dead_characters[$i].side].javelin}
{VARIABLE_OP inventory[$side_number].crossbow add $inventory[$dead_characters[$i].side].crossbow}
{VARIABLE_OP inventory[$side_number].hatchet add $inventory[$dead_characters[$i].side].hatchet}
{VARIABLE_OP inventory[$side_number].knife add $inventory[$dead_characters[$i].side].knife}
# Inventory: Novel Weapons

{VARIABLE_OP inventory[$side_number].salamander_blade add $inventory[$dead_characters[$i].side].salamander_blade}
{VARIABLE_OP inventory[$side_number].holy_sword add $inventory[$dead_characters[$i].side].holy_sword}
{VARIABLE_OP inventory[$side_number].slayer add $inventory[$dead_characters[$i].side].slayer}

{VARIABLE_OP inventory[$side_number].battle_axe add $inventory[$dead_characters[$i].side].battle_axe}
{VARIABLE_OP inventory[$side_number].thunder_axe add $inventory[$dead_characters[$i].side].thunder_axe}

{VARIABLE_OP inventory[$side_number].barbed_spear add $inventory[$dead_characters[$i].side].barbed_spear}
{VARIABLE_OP inventory[$side_number].enchanted_spear add $inventory[$dead_characters[$i].side].enchanted_spear}
{VARIABLE_OP inventory[$side_number].lance add $inventory[$dead_characters[$i].side].lance}

{VARIABLE_OP inventory[$side_number].ice_rod add $inventory[$dead_characters[$i].side].ice_rod}
{VARIABLE_OP inventory[$side_number].plague_staff add $inventory[$dead_characters[$i].side].plague_staff}
{VARIABLE_OP inventory[$side_number].smasher add $inventory[$dead_characters[$i].side].smasher}
{VARIABLE_OP inventory[$side_number].nipper add $inventory[$dead_characters[$i].side].nipper}

{VARIABLE_OP inventory[$side_number].storm_bow add $inventory[$dead_characters[$i].side].storm_bow}
{VARIABLE_OP inventory[$side_number].frost_bow add $inventory[$dead_characters[$i].side].frost_bow}
{VARIABLE_OP inventory[$side_number].fire_bow add $inventory[$dead_characters[$i].side].fire_bow}
{VARIABLE_OP inventory[$side_number].tomahawk add $inventory[$dead_characters[$i].side].tomahawk}
{VARIABLE_OP inventory[$side_number].feathered_javelin add $inventory[$dead_characters[$i].side].feathered_javelin}
{VARIABLE_OP inventory[$side_number].heavy_crossbow add $inventory[$dead_characters[$i].side].heavy_crossbow}
{VARIABLE_OP inventory[$side_number].customised_sling add $inventory[$dead_characters[$i].side].customised_sling}


                    # ...and when you're done, clear this dead character so
                    # stepping on this location doesn't trigger this event
                    # anymore
                   
                    {CLEAR_VARIABLE dead_characters[$i]}
                   
                    # a simple way I tend to use to terminate a FOREACH loop:
                   
                    {VARIABLE i 9999}
                [/then]
            [/if]
        {NEXT i}

    [/event]
#enddef
